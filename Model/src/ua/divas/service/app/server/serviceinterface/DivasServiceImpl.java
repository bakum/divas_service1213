package ua.divas.service.app.server.serviceinterface;

import java.lang.reflect.Method;

import java.util.List;

import javax.ejb.Remote;
import javax.ejb.Stateless;

import javax.interceptor.Interceptors;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.server.svc.ServiceContextInterceptor;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;

import oracle.wsm.metadata.annotation.PolicyReference;
import oracle.wsm.metadata.annotation.PolicySet;

import ua.divas.service.app.common.serviceinterface.DivasService;
import ua.divas.service.vo.common.ContactDetailsViewSDO;
import ua.divas.service.vo.common.CurrencyViewSDO;
import ua.divas.service.vo.common.DivisionSotrViewSDO;
import ua.divas.service.vo.common.DivisionsViewSDO;
import ua.divas.service.vo.common.FirmsViewSDO;
import ua.divas.service.vo.common.GroupmembersViewSDO;
import ua.divas.service.vo.common.KassaSettingsViewSDO;
import ua.divas.service.vo.common.KassaViewSDO;
import ua.divas.service.vo.common.KontragentsViewSDO;
import ua.divas.service.vo.common.LastPricesViewSDO;
import ua.divas.service.vo.common.MeasureUnitViewSDO;
import ua.divas.service.vo.common.NomGroupSDO;
import ua.divas.service.vo.common.NomenklaturaViewSDO;
import ua.divas.service.vo.common.OperationPkoViewSDO;
import ua.divas.service.vo.common.OperationRkoViewSDO;
import ua.divas.service.vo.common.OrderStatusViewSDO;
import ua.divas.service.vo.common.OrdersTpOplatyViewSDO;
import ua.divas.service.vo.common.OrdersTpUslugiViewSDO;
import ua.divas.service.vo.common.OrdersViewSDO;
import ua.divas.service.vo.common.UserSettingsViewSDO;
import ua.divas.service.vo.common.UsersViewSDO;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 25 18:37:08 EEST 2015
// ---------------------------------------------------------------------
@Interceptors({ ServiceContextInterceptor.class })
@Stateless(name = "ua.divas.service.app.common.DivasServiceBean", mappedName = "DivasServiceBean")
@Remote(DivasService.class)
@PortableWebService(targetNamespace = "/ua/divas/service/app/common/", serviceName = "DivasService",
                    portName = "DivasServiceSoapHttpPort",
                    endpointInterface = "ua.divas.service.app.common.serviceinterface.DivasService")
public class DivasServiceImpl extends ServiceImpl implements DivasService {
    private static boolean _isInited = false;

    /**
     * This is the default constructor (do not remove).
     */
    public DivasServiceImpl() {
        init();
        setApplicationModuleDefName("ua.divas.service.app.AppModule");
        setConfigurationName("DivasService");
    }

    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (DivasServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("ua/divas/service/app/common/serviceinterface/", "DivasService.xsd");
                _isInited = true;
            } catch (Throwable t) {
                ADFLogger.createADFLogger(Diagnostic.SERVINT_RT_LOGGER).severe(t);
            }
        }
    }


    /**
     * getContactDetailsView1: generated method. Do not modify.
     */
    public ContactDetailsViewSDO getContactDetailsView1(String id) throws ServiceException {
        return (ContactDetailsViewSDO) get(new Object[] { id }, "ContactDetailsView1", ContactDetailsViewSDO.class);
    }

    /**
     * updateContactDetailsView1: generated method. Do not modify.
     */
    public ContactDetailsViewSDO updateContactDetailsView1(ContactDetailsViewSDO contactDetailsView1) throws ServiceException {
        return (ContactDetailsViewSDO) update(contactDetailsView1, "ContactDetailsView1");
    }

    /**
     * findContactDetailsView1: generated method. Do not modify.
     */
    public List<ContactDetailsViewSDO> findContactDetailsView1(FindCriteria findCriteria,
                                                               FindControl findControl) throws ServiceException {
        return (List<ContactDetailsViewSDO>) find(findCriteria, findControl, "ContactDetailsView1",
                                                  ContactDetailsViewSDO.class);
    }

    /**
     * getCurrencyView1: generated method. Do not modify.
     */
    public CurrencyViewSDO getCurrencyView1(String id) throws ServiceException {
        return (CurrencyViewSDO) get(new Object[] { id }, "CurrencyView1", CurrencyViewSDO.class);
    }

    /**
     * findCurrencyView1: generated method. Do not modify.
     */
    public List<CurrencyViewSDO> findCurrencyView1(FindCriteria findCriteria,
                                                   FindControl findControl) throws ServiceException {
        return (List<CurrencyViewSDO>) find(findCriteria, findControl, "CurrencyView1", CurrencyViewSDO.class);
    }

    /**
     * getDivisionSotrView1: generated method. Do not modify.
     */
    public DivisionSotrViewSDO getDivisionSotrView1(String id) throws ServiceException {
        return (DivisionSotrViewSDO) get(new Object[] { id }, "DivisionSotrView1", DivisionSotrViewSDO.class);
    }

    /**
     * findDivisionSotrView1: generated method. Do not modify.
     */
    public List<DivisionSotrViewSDO> findDivisionSotrView1(FindCriteria findCriteria,
                                                           FindControl findControl) throws ServiceException {
        return (List<DivisionSotrViewSDO>) find(findCriteria, findControl, "DivisionSotrView1",
                                                DivisionSotrViewSDO.class);
    }

    /**
     * getDivisionsView1: generated method. Do not modify.
     */
    public DivisionsViewSDO getDivisionsView1(String id) throws ServiceException {
        return (DivisionsViewSDO) get(new Object[] { id }, "DivisionsView1", DivisionsViewSDO.class);
    }

    /**
     * findDivisionsView1: generated method. Do not modify.
     */
    public List<DivisionsViewSDO> findDivisionsView1(FindCriteria findCriteria,
                                                     FindControl findControl) throws ServiceException {
        return (List<DivisionsViewSDO>) find(findCriteria, findControl, "DivisionsView1", DivisionsViewSDO.class);
    }

    /**
     * getFirmsView1: generated method. Do not modify.
     */
    public FirmsViewSDO getFirmsView1(String id) throws ServiceException {
        return (FirmsViewSDO) get(new Object[] { id }, "FirmsView1", FirmsViewSDO.class);
    }

    /**
     * findFirmsView1: generated method. Do not modify.
     */
    public List<FirmsViewSDO> findFirmsView1(FindCriteria findCriteria,
                                             FindControl findControl) throws ServiceException {
        return (List<FirmsViewSDO>) find(findCriteria, findControl, "FirmsView1", FirmsViewSDO.class);
    }


    /**
     * findKassaSettingsView1: generated method. Do not modify.
     */
    public List<KassaSettingsViewSDO> findKassaSettingsView1(FindCriteria findCriteria,
                                                             FindControl findControl) throws ServiceException {
        return (List<KassaSettingsViewSDO>) find(findCriteria, findControl, "KassaSettingsView1",
                                                 KassaSettingsViewSDO.class);
    }

    /**
     * getKassaView1: generated method. Do not modify.
     */
    public KassaViewSDO getKassaView1(String id) throws ServiceException {
        return (KassaViewSDO) get(new Object[] { id }, "KassaView1", KassaViewSDO.class);
    }

    /**
     * findKassaView1: generated method. Do not modify.
     */
    public List<KassaViewSDO> findKassaView1(FindCriteria findCriteria,
                                             FindControl findControl) throws ServiceException {
        return (List<KassaViewSDO>) find(findCriteria, findControl, "KassaView1", KassaViewSDO.class);
    }


    /**
     * updateKontragentsView1: generated method. Do not modify.
     */
    public KontragentsViewSDO updateKontragentsView1(KontragentsViewSDO kontragentsView1) throws ServiceException {
        return (KontragentsViewSDO) update(kontragentsView1, "KontragentsView1");
    }

    /**
     * findKontragentsView1: generated method. Do not modify.
     */
    public List<KontragentsViewSDO> findKontragentsView1(FindCriteria findCriteria,
                                                         FindControl findControl) throws ServiceException {
        return (List<KontragentsViewSDO>) find(findCriteria, findControl, "KontragentsView1", KontragentsViewSDO.class);
    }

    /**
     * getLastPricesView1: generated method. Do not modify.
     */
    public LastPricesViewSDO getLastPricesView1(String id) throws ServiceException {
        return (LastPricesViewSDO) get(new Object[] { id }, "LastPricesView1", LastPricesViewSDO.class);
    }

    /**
     * findLastPricesView1: generated method. Do not modify.
     */
    public List<LastPricesViewSDO> findLastPricesView1(FindCriteria findCriteria,
                                                       FindControl findControl) throws ServiceException {
        return (List<LastPricesViewSDO>) find(findCriteria, findControl, "LastPricesView1", LastPricesViewSDO.class);
    }

    /**
     * getMeasureUnitView1: generated method. Do not modify.
     */
    public MeasureUnitViewSDO getMeasureUnitView1(String id) throws ServiceException {
        return (MeasureUnitViewSDO) get(new Object[] { id }, "MeasureUnitView1", MeasureUnitViewSDO.class);
    }

    /**
     * findMeasureUnitView1: generated method. Do not modify.
     */
    public List<MeasureUnitViewSDO> findMeasureUnitView1(FindCriteria findCriteria,
                                                         FindControl findControl) throws ServiceException {
        return (List<MeasureUnitViewSDO>) find(findCriteria, findControl, "MeasureUnitView1", MeasureUnitViewSDO.class);
    }

    /**
     * getOperationPkoView1: generated method. Do not modify.
     */
    public OperationPkoViewSDO getOperationPkoView1(String id) throws ServiceException {
        return (OperationPkoViewSDO) get(new Object[] { id }, "OperationPkoView1", OperationPkoViewSDO.class);
    }

    /**
     * findOperationPkoView1: generated method. Do not modify.
     */
    public List<OperationPkoViewSDO> findOperationPkoView1(FindCriteria findCriteria,
                                                           FindControl findControl) throws ServiceException {
        return (List<OperationPkoViewSDO>) find(findCriteria, findControl, "OperationPkoView1",
                                                OperationPkoViewSDO.class);
    }

    /**
     * getOperationRkoView1: generated method. Do not modify.
     */
    public OperationRkoViewSDO getOperationRkoView1(String id) throws ServiceException {
        return (OperationRkoViewSDO) get(new Object[] { id }, "OperationRkoView1", OperationRkoViewSDO.class);
    }

    /**
     * findOperationRkoView1: generated method. Do not modify.
     */
    public List<OperationRkoViewSDO> findOperationRkoView1(FindCriteria findCriteria,
                                                           FindControl findControl) throws ServiceException {
        return (List<OperationRkoViewSDO>) find(findCriteria, findControl, "OperationRkoView1",
                                                OperationRkoViewSDO.class);
    }


    /**
     * findOrderStatusView1: generated method. Do not modify.
     */
    public List<OrderStatusViewSDO> findOrderStatusView1(FindCriteria findCriteria,
                                                         FindControl findControl) throws ServiceException {
        return (List<OrderStatusViewSDO>) find(findCriteria, findControl, "OrderStatusView1", OrderStatusViewSDO.class);
    }

    /**
     * getOrdersTpOplatyView1: generated method. Do not modify.
     */
    public OrdersTpOplatyViewSDO getOrdersTpOplatyView1(String id) throws ServiceException {
        return (OrdersTpOplatyViewSDO) get(new Object[] { id }, "OrdersTpOplatyView1", OrdersTpOplatyViewSDO.class);
    }

    /**
     * createOrdersTpOplatyView1: generated method. Do not modify.
     */
    public OrdersTpOplatyViewSDO createOrdersTpOplatyView1(OrdersTpOplatyViewSDO ordersTpOplatyView1) throws ServiceException {
        return (OrdersTpOplatyViewSDO) create(ordersTpOplatyView1, "OrdersTpOplatyView1");
    }

    /**
     * updateOrdersTpOplatyView1: generated method. Do not modify.
     */
    public OrdersTpOplatyViewSDO updateOrdersTpOplatyView1(OrdersTpOplatyViewSDO ordersTpOplatyView1) throws ServiceException {
        return (OrdersTpOplatyViewSDO) update(ordersTpOplatyView1, "OrdersTpOplatyView1");
    }

    /**
     * deleteOrdersTpOplatyView1: generated method. Do not modify.
     */
    public void deleteOrdersTpOplatyView1(OrdersTpOplatyViewSDO ordersTpOplatyView1) throws ServiceException {
        delete(ordersTpOplatyView1, "OrdersTpOplatyView1");
    }

    /**
     * mergeOrdersTpOplatyView1: generated method. Do not modify.
     */
    public OrdersTpOplatyViewSDO mergeOrdersTpOplatyView1(OrdersTpOplatyViewSDO ordersTpOplatyView1) throws ServiceException {
        return (OrdersTpOplatyViewSDO) merge(ordersTpOplatyView1, "OrdersTpOplatyView1");
    }

    /**
     * findOrdersTpOplatyView1: generated method. Do not modify.
     */
    public List<OrdersTpOplatyViewSDO> findOrdersTpOplatyView1(FindCriteria findCriteria,
                                                               FindControl findControl) throws ServiceException {
        return (List<OrdersTpOplatyViewSDO>) find(findCriteria, findControl, "OrdersTpOplatyView1",
                                                  OrdersTpOplatyViewSDO.class);
    }

    /**
     * getOrdersTpUslugiView1: generated method. Do not modify.
     */
    public OrdersTpUslugiViewSDO getOrdersTpUslugiView1(String id) throws ServiceException {
        return (OrdersTpUslugiViewSDO) get(new Object[] { id }, "OrdersTpUslugiView1", OrdersTpUslugiViewSDO.class);
    }

    /**
     * createOrdersTpUslugiView1: generated method. Do not modify.
     */
    public OrdersTpUslugiViewSDO createOrdersTpUslugiView1(OrdersTpUslugiViewSDO ordersTpUslugiView1) throws ServiceException {
        return (OrdersTpUslugiViewSDO) create(ordersTpUslugiView1, "OrdersTpUslugiView1");
    }

    /**
     * updateOrdersTpUslugiView1: generated method. Do not modify.
     */
    public OrdersTpUslugiViewSDO updateOrdersTpUslugiView1(OrdersTpUslugiViewSDO ordersTpUslugiView1) throws ServiceException {
        return (OrdersTpUslugiViewSDO) update(ordersTpUslugiView1, "OrdersTpUslugiView1");
    }

    /**
     * deleteOrdersTpUslugiView1: generated method. Do not modify.
     */
    public void deleteOrdersTpUslugiView1(OrdersTpUslugiViewSDO ordersTpUslugiView1) throws ServiceException {
        delete(ordersTpUslugiView1, "OrdersTpUslugiView1");
    }

    /**
     * mergeOrdersTpUslugiView1: generated method. Do not modify.
     */
    public OrdersTpUslugiViewSDO mergeOrdersTpUslugiView1(OrdersTpUslugiViewSDO ordersTpUslugiView1) throws ServiceException {
        return (OrdersTpUslugiViewSDO) merge(ordersTpUslugiView1, "OrdersTpUslugiView1");
    }

    /**
     * findOrdersTpUslugiView1: generated method. Do not modify.
     */
    public List<OrdersTpUslugiViewSDO> findOrdersTpUslugiView1(FindCriteria findCriteria,
                                                               FindControl findControl) throws ServiceException {
        return (List<OrdersTpUslugiViewSDO>) find(findCriteria, findControl, "OrdersTpUslugiView1",
                                                  OrdersTpUslugiViewSDO.class);
    }


    /**
     * updateOrdersView1: generated method. Do not modify.
     */
    public OrdersViewSDO updateOrdersView1(OrdersViewSDO ordersView1) throws ServiceException {
        return (OrdersViewSDO) update(ordersView1, "OrdersView1");
    }

    /**
     * mergeOrdersView1: generated method. Do not modify.
     */
    public OrdersViewSDO mergeOrdersView1(OrdersViewSDO ordersView1) throws ServiceException {
        return (OrdersViewSDO) merge(ordersView1, "OrdersView1");
    }

    /**
     * findOrdersView1: generated method. Do not modify.
     */
    public List<OrdersViewSDO> findOrdersView1(FindCriteria findCriteria,
                                               FindControl findControl) throws ServiceException {
        return (List<OrdersViewSDO>) find(findCriteria, findControl, "OrdersView1", OrdersViewSDO.class);
    }

    /**
     * getPkoView1: generated method. Do not modify.
     */
    public ua.divas.service.vo.common.PkoViewSDO getPkoView1(String id) throws ServiceException {
        return (ua.divas.service.vo.common.PkoViewSDO) get(new Object[] { id }, "PkoView1",
                                                           ua.divas.service.vo.common.PkoViewSDO.class);
    }

    /**
     * createPkoView1: generated method. Do not modify.
     */
    public ua.divas.service.vo.common.PkoViewSDO createPkoView1(ua.divas.service.vo.common.PkoViewSDO pkoView1) throws ServiceException {
        return (ua.divas.service.vo.common.PkoViewSDO) create(pkoView1, "PkoView1");
    }

    /**
     * updatePkoView1: generated method. Do not modify.
     */
    public ua.divas.service.vo.common.PkoViewSDO updatePkoView1(ua.divas.service.vo.common.PkoViewSDO pkoView1) throws ServiceException {
        return (ua.divas.service.vo.common.PkoViewSDO) update(pkoView1, "PkoView1");
    }

    /**
     * deletePkoView1: generated method. Do not modify.
     */
    public void deletePkoView1(ua.divas.service.vo.common.PkoViewSDO pkoView1) throws ServiceException {
        delete(pkoView1, "PkoView1");
    }

    /**
     * mergePkoView1: generated method. Do not modify.
     */
    public ua.divas.service.vo.common.PkoViewSDO mergePkoView1(ua.divas.service.vo.common.PkoViewSDO pkoView1) throws ServiceException {
        return (ua.divas.service.vo.common.PkoViewSDO) merge(pkoView1, "PkoView1");
    }

    /**
     * findPkoView1: generated method. Do not modify.
     */
    public List<ua.divas.service.vo.common.PkoViewSDO> findPkoView1(FindCriteria findCriteria,
                                                                    FindControl findControl) throws ServiceException {
        return (List<ua.divas.service.vo.common.PkoViewSDO>) find(findCriteria, findControl, "PkoView1",
                                                                  ua.divas.service.vo.common.PkoViewSDO.class);
    }

    /**
     * getRkoView1: generated method. Do not modify.
     */
    public ua.divas.service.vo.common.RkoViewSDO getRkoView1(String id) throws ServiceException {
        return (ua.divas.service.vo.common.RkoViewSDO) get(new Object[] { id }, "RkoView1",
                                                           ua.divas.service.vo.common.RkoViewSDO.class);
    }

    /**
     * createRkoView1: generated method. Do not modify.
     */
    public ua.divas.service.vo.common.RkoViewSDO createRkoView1(ua.divas.service.vo.common.RkoViewSDO rkoView1) throws ServiceException {
        return (ua.divas.service.vo.common.RkoViewSDO) create(rkoView1, "RkoView1");
    }

    /**
     * updateRkoView1: generated method. Do not modify.
     */
    public ua.divas.service.vo.common.RkoViewSDO updateRkoView1(ua.divas.service.vo.common.RkoViewSDO rkoView1) throws ServiceException {
        return (ua.divas.service.vo.common.RkoViewSDO) update(rkoView1, "RkoView1");
    }

    /**
     * deleteRkoView1: generated method. Do not modify.
     */
    public void deleteRkoView1(ua.divas.service.vo.common.RkoViewSDO rkoView1) throws ServiceException {
        delete(rkoView1, "RkoView1");
    }

    /**
     * mergeRkoView1: generated method. Do not modify.
     */
    public ua.divas.service.vo.common.RkoViewSDO mergeRkoView1(ua.divas.service.vo.common.RkoViewSDO rkoView1) throws ServiceException {
        return (ua.divas.service.vo.common.RkoViewSDO) merge(rkoView1, "RkoView1");
    }

    /**
     * findRkoView1: generated method. Do not modify.
     */
    public List<ua.divas.service.vo.common.RkoViewSDO> findRkoView1(FindCriteria findCriteria,
                                                                    FindControl findControl) throws ServiceException {
        return (List<ua.divas.service.vo.common.RkoViewSDO>) find(findCriteria, findControl, "RkoView1",
                                                                  ua.divas.service.vo.common.RkoViewSDO.class);
    }

    /**
     * getUserSettingsView1: generated method. Do not modify.
     */
    public UserSettingsViewSDO getUserSettingsView1(String id) throws ServiceException {
        return (UserSettingsViewSDO) get(new Object[] { id }, "UserSettingsView1", UserSettingsViewSDO.class);
    }

    /**
     * findUserSettingsView1: generated method. Do not modify.
     */
    public List<UserSettingsViewSDO> findUserSettingsView1(FindCriteria findCriteria,
                                                           FindControl findControl) throws ServiceException {
        return (List<UserSettingsViewSDO>) find(findCriteria, findControl, "UserSettingsView1",
                                                UserSettingsViewSDO.class);
    }


    /**
     * findUsersView1: generated method. Do not modify.
     */
    public List<UsersViewSDO> findUsersView1(FindCriteria findCriteria,
                                             FindControl findControl) throws ServiceException {
        return (List<UsersViewSDO>) find(findCriteria, findControl, "UsersView1", UsersViewSDO.class);
    }

    /**
     * findGroupmembersView1: generated method. Do not modify.
     */
    public List<GroupmembersViewSDO> findGroupmembersView1(FindCriteria findCriteria,
                                                           FindControl findControl) throws ServiceException {
        return (List<GroupmembersViewSDO>) find(findCriteria, findControl, "GroupmembersView1",
                                                GroupmembersViewSDO.class);
    }

    /**
     * getKassaSettingsView1: generated method. Do not modify.
     */
    public KassaSettingsViewSDO getKassaSettingsView1() throws ServiceException {
        return (KassaSettingsViewSDO) get(new Object[] { }, "KassaSettingsView1", KassaSettingsViewSDO.class);
    }

    /**
     * findNomenklaturaView1: generated method. Do not modify.
     */
    public List<NomenklaturaViewSDO> findNomenklaturaView1(FindCriteria findCriteria,
                                                           FindControl findControl) throws ServiceException {
        return (List<NomenklaturaViewSDO>) find(findCriteria, findControl, "NomenklaturaView1",
                                                NomenklaturaViewSDO.class);
    }

    /**
     * getOrderStatusView1: generated method. Do not modify.
     */
    public OrderStatusViewSDO getOrderStatusView1() throws ServiceException {
        return (OrderStatusViewSDO) get(new Object[] { }, "OrderStatusView1", OrderStatusViewSDO.class);
    }


    /**
     * findNomGroup1: generated method. Do not modify.
     */
    public List<NomGroupSDO> findNomGroup1(FindCriteria findCriteria, FindControl findControl) throws ServiceException {
        return (List<NomGroupSDO>) find(findCriteria, findControl, "NomGroup1", NomGroupSDO.class);
    }

    /**
     * getKontragentsView1: generated method. Do not modify.
     */
    public KontragentsViewSDO getKontragentsView1() throws ServiceException {
        return (KontragentsViewSDO) get(new Object[] { }, "KontragentsView1", KontragentsViewSDO.class);
    }

    /**
     * getOrdersView1: generated method. Do not modify.
     */
    public OrdersViewSDO getOrdersView1(String id) throws ServiceException {
        return (OrdersViewSDO) get(new Object[] { id }, "OrdersView1", OrdersViewSDO.class);
    }

    /**
     * createOrdersView1: generated method. Do not modify.
     */
    public OrdersViewSDO createOrdersView1(OrdersViewSDO ordersView1) throws ServiceException {
        return (OrdersViewSDO) create(ordersView1, "OrdersView1");
    }

    /**
     * getUsersView1: generated method. Do not modify.
     */
    public UsersViewSDO getUsersView1() throws ServiceException {
        return (UsersViewSDO) get(new Object[] { }, "UsersView1", UsersViewSDO.class);
    }
}

